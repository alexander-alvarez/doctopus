/** Declaration file generated by dts-gen */

export class Doc {
    constructor(doc: any);

    add(key: any, val: any): any;

    bodyParam(obj: any): any;

    build(): any;

    clearParams(): any;

    csv(): any;

    delete(): any;

    description(txt: any): any;

    get(): any;

    group(txt: any): any;

    html(): any;

    idParam(paramName: any, modelName: any): any;

    innerDoc(): any;

    json(): any;

    modelBody(modelName: any): any;

    onSuccess(code: any, result: any, useUtil: any): any;

    onSuccessUseUtil(code: any, result: any): any;

    operationId(txt: any): any;

    param(obj: any): any;

    paramGroup(name: any): any;

    post(): any;

    put(): any;

    removeParam(name: any): any;

    setMethod(methodName: any): any;

    setModel(name: any): any;

    setParams(arr: any): any;

    summary(txt: any): any;

    tags(arr: any): any;

    static arrayOf(schema: string): any;

    static arrayOfModel(modelName: string): any;

    static arrayOfType(type: any): any;

    static bool(): any;

    static date(): any;

    static extend(modelName: any, obj: any): any;

    static file(): any;

    static getDefinitions(): any;

    static inlineObj(props: any): any;

    static model(modelName: any): any;

    static namedModel(name: any, modelName: any): any;

    static namedModelArray(name: any, modelName: any): any;

    static number(): any;

    static object(): any;

    static pick(modelName: any, prop: any): any;

    static setDefinitions(obj: any): void;

    static string(): any;

    static withParamGroup(name: any, arg: any): any;

}

export class DocBuilder {
    constructor(docs: any);

    add(path: any, doc: any): void;

    addDefinition(path: any, doc: any): void;

    addDefinitions(obj: any): void;

    build(): any;

    clear(): void;

    get(key: any): any;

    getFactory(namespace: any, modelName: any): any;

    set(key: any, value: any, ...args: any[]): any;

}

export const options: {
};

export function get(key: any, value: any, ...args: any[]): any;

export function paramGroup(name: any, schema: any): any;

export function set(key: any, value: any, ...args: any[]): any;

